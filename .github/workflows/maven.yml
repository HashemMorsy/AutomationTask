name: Desktop Browsers Tests

on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
    - cron: '00 1 * * *'

jobs:
  browser:
    name: Run Browser-based Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.3.4
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '16'
      - name: Set up Native Selenium Grid
        if: runner.os == 'Linux'
        run: docker-compose -f src/test/resources/selenium3.yml up --scale chrome=4 --remove-orphans -d
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Check running containers
        if: runner.os == 'Linux'
        run: docker ps
      - name: Run tests on Linux/MacOS
        if: runner.os != 'Windows'
        continue-on-error: true
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
               mvn test -DexecutionAddress="localhost:4444" -DtargetOperatingSystem="Linux-64" -DmaximumPerformanceMode="2" -DtargetBrowserName="GoogleChrome"
          elif [ "$RUNNER_OS" == "macOS" ]; then
               mvn test -DexecutionAddress="local" -DtargetOperatingSystem="Mac-64" -DmaximumPerformanceMode="2" -DtargetBrowserName="Safari" -DgenerateExtentReports="true" -DcleanExtentReportsDirectoryBeforeExecution="true" -DsetParallel="NONE" -DsetThreadCount="1"
          else
               echo "$RUNNER_OS not supported"
               exit 1
          fi
      - name: Run tests on Windows
        if: runner.os == 'Windows'
        continue-on-error: true
        run: |
          mvn test -DexecutionAddress="local" -DtargetOperatingSystem="Windows-64" -DmaximumPerformanceMode="2" -DtargetBrowserName="MicrosoftEdge" -DgenerateExtentReports="true" -DcleanExtentReportsDirectoryBeforeExecution="true" -DsetParallel="NONE" -DsetThreadCount="1"
